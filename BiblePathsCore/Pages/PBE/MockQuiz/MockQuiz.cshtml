@page
@model BiblePathsCore.Pages.PBE.MockQuizModel

@{
    ViewData["Title"] = Model.Quiz.GroupName;
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@if (Model.UserMessage != null)
{
    <div><span class="bg-light text-primary">@Model.UserMessage</span> </div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-9">
            <h4>Question @Model.Quiz.QuestionNumber</h4>
        </div>
        <div class="col-3">
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-9">
            <div class="card shadow h-100">
                <div class="card-body d-flex align-items-center">
                    <h2>@Model.Question.PBEQuestion</h2>
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-3">
            <div class="mb-2">
                <button type="button" class="btn btn-outline-dark" tabindex="0" onclick="StartTimer(@Model.Question.TimeLimit)" id="StartTimerButton">Start <u>T</u>imer (@Model.Question.TimeLimit)</button>
            </div>
            <div>
                <button type="button" data-toggle="collapse" data-target="#ShowAnswers" tabindex="0" class="btn btn-outline-danger" id="ShowAnswersButton" onclick="ShowAnswers()"><u>S</u>how Answer</button>
            </div>
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="mt-2 form-group input-group">
                    <input type="hidden" asp-for="BibleId" />
                    <input type="hidden" asp-for="Quiz.Id" />
                    <input type="hidden" asp-for="Question.Id" />
                    <input type="hidden" asp-for="Question.Type" />
                    <button id="btnNextQuestion" type="submit" tabindex="0" class="btn btn-outline-primary"><u>N</u>ext Question</button>
@*                     <input id="btnNextQuestion" type="submit" tabindex="0" value="<u>N</u>ext Question" class="btn btn-outline-primary" /> *@
                </div>
            </form>
        </div>
    </div>
</div>
<div class="container-fluid collapse" id="ShowAnswers">
    <div class="row">
        <div class="col-xs-12 col-sm-9">
            <div class="card shadow">
                <div class="card-body">
                    @foreach (var answer in Model.Question.QuizAnswers)
                    {
                        <h2>@answer.Answer</h2>
                    }
                </div>
            </div>
        </div>
        @if (Model.Question.Type == (int)BiblePathsCore.Models.QuestionType.AIProposed)
        {
            <div class="col-xs-12 col-sm-3">
                <p class="font-weight-bold">AI Generated Content: </p> <span class="text-info">This question, answer, and 
                    points were generated by AI. Please challenge if you spot any issues.   
                    </span>
            </div>
        }
    </div>
    <hr />
    <div class="row">
        @{string VerseRef = Model.Question.BookName + " " + Model.Question.Chapter + ": " + Model.Question.StartVerse;
            if (Model.Question.EndVerse > Model.Question.StartVerse) { VerseRef += " - " + Model.Question.EndVerse; }
        }
        <div class="col-xs-12 col-sm-9">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">
                        @if (Model.Question.IsCommentaryQuestion)
                        {
                            <span class="font-weight-bold">Commentary for Reference </span>
                            <span>@Model.Question.CommentarySectionTitle</span>
                        }
                        else
                        {
                            <span class="font-weight-bold">Verses for Reference </span>
                            <span>@VerseRef</span>
                        }
                    </div>
                    <div class="card-text scroll-box">
                        @if (Model.Question.IsCommentaryQuestion)
                        {
                            @foreach (var Verse in Model.Question.Verses)
                            {
                                @Verse.Text
                            }
                        }
                        else
                        {
                            @foreach (var Verse in Model.Question.Verses)
                            {
                                <sup>@Verse.Verse</sup>
                                @Verse.Text
                                <br />
                            }
                            <br />
                            <div class="text-muted">
                                @Model.Question.LegalNote
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-3">
            <form asp-page="/PBE/ChallengeQuestion" method="post">
                <div>
                    <textarea id="ChallengeTextArea" name="ChallengeComment" rows="4" placeholder="Challenge Comment Required" class="scroll-box" required></textarea>
                    <p><small class="text-info">A challenged question is taken out of rotation until it has been reviewed and the challenge removed.</small></p>
                </div>
                <div>
                    <input type="hidden" name="id" value="@Model.Question.Id" />
                    <input type="hidden" name="ReturnPath" value="MockQuiz/MockQuiz" />
                    <input type="hidden" name="ReturnQuizID" value="@Model.Quiz.Id" />
                    <input type="hidden" name="QuestionType" value="@Model.Question.Type" />
                    <button id="btnConfirmChallenge" type="submit" class="btn btn-outline-danger" disabled><u>C</u>hallenge Question</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <hr />
    <a asp-page="/PBE/Quizzes">Back to Quizzes</a>
    <br />
    <a asp-page="/PBE/Index">Back to PBE Home</a>
</div>

@section Scripts {
    <partial name="_QuizHelpers" />
    @* <partial name="_HideUnHide" /> *@
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}